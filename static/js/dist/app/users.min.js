let users=[];const save=e=>{if($("#password").val()!==$("#confirm_password").val())return void modalError("Passwords must match.");let s={username:$("#username").val(),password:$("#password").val(),role:$("#role").val()};-1!=e?(s.id=e,api.userId.put(s).success(function(e){successFlash("User "+escapeHtml(s.username)+" updated successfully!"),load(),dismiss(),$("#modal").modal("hide")}).error(function(e){modalError(e.responseJSON.message)})):api.users.post(s).success(function(e){successFlash("User "+escapeHtml(s.username)+" registered successfully!"),load(),dismiss(),$("#modal").modal("hide")}).error(function(e){modalError(e.responseJSON.message)})},dismiss=()=>{$("#username").val(""),$("#password").val(""),$("#confirm_password").val(""),$("#role").val(""),$("#modal\\.flashes").empty()},edit=e=>{$("#modalSubmit").unbind("click").click(()=>{save(e)}),$("#role").select2(),-1==e?($("#role").val("user"),$("#role").trigger("change")):api.userId.get(e).success(function(e){$("#username").val(e.username),$("#role").val(e.role.slug),$("#role").trigger("change")}).error(function(){errorFlash("Error fetching user")})},deleteUser=e=>{var t=users.find(e=>e.id==s);s&&swal({title:"Are you sure?",text:"This will delete the account for "+escapeHtml(s.username)+" as well as all of the objects they have created.\n\nThis can't be undone!",type:"warning",animation:!1,showCancelButton:!0,confirmButtonText:"Delete",confirmButtonColor:"#428bca",reverseButtons:!0,allowOutsideClick:!1,preConfirm:function(){return new Promise((s,t)=>{api.userId.delete(e).success(e=>{s()}).error(e=>{t(e.responseJSON.message)})})}}).then(function(){swal("User Deleted!","The user account for "+escapeHtml(s.username)+" and all associated objects have been deleted!","success"),$('button:contains("OK")').on("click",function(){location.reload()})})},load=()=>{$("#userTable").hide(),$("#loading").show(),api.users.get().success(e=>{users=e,$("#loading").hide(),$("#userTable").show();let s=$("#userTable").DataTable({destroy:!0,columnDefs:[{orderable:!1,targets:"no-sort"}]});s.clear(),$.each(users,(e,t)=>{s.row.add([escapeHtml(t.username),escapeHtml(t.role.name),"<div class='pull-right'><button class='btn btn-primary edit_button' data-toggle='modal' data-backdrop='static' data-target='#modal' data-user-id='"+t.id+"'>                    <i class='fa fa-pencil'></i>                    </button>                    <button class='btn btn-danger delete_button' data-user-id='"+t.id+"'>                    <i class='fa fa-trash-o'></i>                    </button></div>"]).draw()})}).error(()=>{errorFlash("Error fetching users")})};$(document).ready(function(){load(),$("#modal").on("hide.bs.modal",function(){dismiss()}),$.fn.select2.defaults.set("width","100%"),$.fn.select2.defaults.set("dropdownParent",$("#role-select")),$.fn.select2.defaults.set("theme","bootstrap"),$.fn.select2.defaults.set("sorter",function(e){return e.sort(function(e,s){return e.text.toLowerCase()>s.text.toLowerCase()?1:e.text.toLowerCase()<s.text.toLowerCase()?-1:0})}),$("#new_button").on("click",function(){edit(-1)}),$("#userTable").on("click",".edit_button",function(e){edit($(this).attr("data-user-id"))}),$("#userTable").on("click",".delete_button",function(e){var s,t;s=$(this).attr("data-user-id"),(t=users.find(e=>e.id==s))&&swal({title:"Are you sure?",text:"This will delete the account for "+escapeHtml(t.username)+" as well as all of the objects they have created.\n\nThis can't be undone!",type:"warning",animation:!1,showCancelButton:!0,confirmButtonText:"Delete",confirmButtonColor:"#428bca",reverseButtons:!0,allowOutsideClick:!1,preConfirm:function(){return new Promise((e,t)=>{api.userId.delete(s).success(s=>{e()}).error(e=>{t(e.responseJSON.message)})})}}).then(function(){swal("User Deleted!","The user account for "+escapeHtml(t.username)+" and all associated objects have been deleted!","success"),$('button:contains("OK")').on("click",function(){location.reload()})})})});